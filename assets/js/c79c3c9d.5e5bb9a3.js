"use strict";(self.webpackChunkstryker_mutator_github_io=self.webpackChunkstryker_mutator_github_io||[]).push([[1001],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return k}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(r),k=n,h=m["".concat(p,".").concat(k)]||m[k]||u[k]||o;return r?a.createElement(h,i(i({ref:t},d),{},{components:r})):a.createElement(h,i({ref:t},d))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},795:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s}});r(7294);var a=r(3905);function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},n.apply(this,arguments)}const o={title:"Stryker dashboard",sidebar_position:3},i=void 0,l={unversionedId:"General/dashboard",id:"General/dashboard",title:"Stryker dashboard",description:"The Stryker dashboard is a dashboard for mutation testing//dashboard.stryker-mutator.io. It is free to use and open source. It has the following features:",source:"@site/docs/General/dashboard.md",sourceDirName:"General",slug:"/General/dashboard",permalink:"/docs/General/dashboard",draft:!1,editUrl:"https://github.com/stryker-mutator/stryker-mutator.github.io/edit/develop/docs/General/dashboard.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Stryker dashboard",sidebar_position:3},sidebar:"docs",previous:{title:"An example",permalink:"/docs/General/example"},next:{title:"FAQ",permalink:"/docs/General/faq"}},p={},s=[{value:"Enable the dashboard for your project",id:"enable-the-dashboard-for-your-project",level:2},{value:"Send your first report",id:"send-your-first-report",level:2},{value:"Send a report directly from Stryker",id:"send-a-report-directly-from-stryker",level:3},{value:"Retrieved from environment",id:"retrieved-from-environment",level:4},{value:"Send a report via curl",id:"send-a-report-via-curl",level:3}],d={toc:s};function u({components:e,...t}){return(0,a.kt)("wrapper",n({},d,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Stryker dashboard is a dashboard for mutation testing: ",(0,a.kt)("a",n({parentName:"p"},{href:"https://dashboard.stryker-mutator.io"}),"https://dashboard.stryker-mutator.io"),". It is free to use and open source. It has the following features:"),(0,a.kt)("p",null,"\ud83e\udd47 Supply a mutation score badge to pimp your readme",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83e\udd11 Free to use for open source",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83d\udcca Hosts your mutation testing report in the cloud",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83c\udf0e Supports all mutation testing frameworks","*"),(0,a.kt)("p",null,"*"," That support the ",(0,a.kt)("a",n({parentName:"p"},{href:"https://github.com/stryker-mutator/mutation-testing-elements/tree/master/packages/report-schema"}),"mutation testing report schema"),"."),(0,a.kt)("h2",n({},{id:"enable-the-dashboard-for-your-project"}),"Enable the dashboard for your project"),(0,a.kt)("p",null,"Enabling the dashboard for your project is as simple as navigating to ",(0,a.kt)("a",n({parentName:"p"},{href:"https://dashboard.stryker-mutator.io"}),"https://dashboard.stryker-mutator.io"),", logging in with your GitHub account and enabling it for your repository."),(0,a.kt)("h2",n({},{id:"send-your-first-report"}),"Send your first report"),(0,a.kt)("p",null,"Send your first report ",(0,a.kt)("a",n({parentName:"p"},{href:"#send-a-report-direcly-from-Stryker"}),"directly from Stryker"),", or manually via ",(0,a.kt)("a",n({parentName:"p"},{href:"#send-a-report-via-curl"}),"a curl request"),"."),(0,a.kt)("h3",n({},{id:"send-a-report-directly-from-stryker"}),"Send a report directly from Stryker"),(0,a.kt)("p",null,"Current status:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",n({parentName:"tr"},{align:null})),(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Stryker"),(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Stryker.NET"),(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Stryker4s"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Full report"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Mutation score report"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"dashboard.*")," settings"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705")))),(0,a.kt)("p",null,"Please visit ",(0,a.kt)("a",n({parentName:"p"},{href:"https://github.com/stryker-mutator/stryker-net/blob/master/docs/reporters.md#dashboard-reporter"}),"Stryker.NET specific docs")," for Stryker.NET."),(0,a.kt)("p",null,"Enabling the dashboard reporter works the same across all implementations of Stryker."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Enabling the dashboard reporter is done by adding ",(0,a.kt)("inlineCode",{parentName:"li"},'"dashboard"')," to the ",(0,a.kt)("inlineCode",{parentName:"li"},'"reporters"')," configuration."),(0,a.kt)("li",{parentName:"ol"},"Configure the reporter:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'Configuring the "project" is done via the ',(0,a.kt)("inlineCode",{parentName:"li"},"dashboard.project")," configuration key (default: retrieved from the environment)"),(0,a.kt)("li",{parentName:"ul"},'Configuring the "module is done via the ',(0,a.kt)("inlineCode",{parentName:"li"},"dashboard.module")," configuration key."),(0,a.kt)("li",{parentName:"ul"},'Configuring the "version" is done via the ',(0,a.kt)("inlineCode",{parentName:"li"},"dashboard.version")," configuration key. (default: retrieved from environment)"),(0,a.kt)("li",{parentName:"ul"},'Configuring the "baseUrl" is done via the ',(0,a.kt)("inlineCode",{parentName:"li"},"dashboard.baseUrl"),' configuration key. It defaults to "',(0,a.kt)("a",n({parentName:"li"},{href:"https://dashboard.stryker-mutator.io"}),"https://dashboard.stryker-mutator.io"),'".'),(0,a.kt)("li",{parentName:"ul"},'Configuring the "reportType" is done via the ',(0,a.kt)("inlineCode",{parentName:"li"},"dashboard.reportType")," configuration key."))),(0,a.kt)("li",{parentName:"ol"},'Configuring the API key by setting the "STRYKER_DASHBOARD_API_KEY" variable.')),(0,a.kt)("h4",n({},{id:"retrieved-from-environment"}),"Retrieved from environment"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"project")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"version")," settings can also be retrieved from your build servers environment. This is not supported for all CI providers or Stryker implementations. See the table below for the current support."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",n({parentName:"tr"},{align:null})),(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Stryker"),(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Stryker.NET",(0,a.kt)("sup",n({parentName:"th"},{id:"fnref-1"}),(0,a.kt)("a",n({parentName:"sup"},{href:"#fn-1",className:"footnote-ref"}),"1"))),(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Stryker4s"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Travis"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"CircleCI"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Azure dev/ops"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u274c"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u274c")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"GitlabCI"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u274c"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u274c")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Github actions"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"\u2705")))),(0,a.kt)("h3",n({},{id:"send-a-report-via-curl"}),"Send a report via curl"),(0,a.kt)("p",null,"You can send a report with an HTTP PUT request, like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-sh"}),"curl -X PUT \\\n  $BASE_URL$/api/reports/$PROJECT$/$VERSION$ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: dashboard.stryker-mutator.io' \\\n  -H 'X-Api-Key: $API_KEY$' \\\n  -d @mutation-testing-report.json\n")),(0,a.kt)("p",null,"Multiple results per ",(0,a.kt)("inlineCode",{parentName:"p"},"VERSION")," are also supported using this url: ",(0,a.kt)("inlineCode",{parentName:"p"},"$BASE_URL$/api/reports/$PROJECT$/$VERSION$?module=$MODULE_NAME$")),(0,a.kt)("p",null,"The variables here are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"BASE_URL"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"https://dashboard.stryker-mutator.io")," for production, ",(0,a.kt)("inlineCode",{parentName:"li"},"https://stryker-dashboard-acceptance.azurewebsites.net/")," for acceptance"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PROJECT"),": The name registered with the dashboard. It is in the form of ",(0,a.kt)("inlineCode",{parentName:"li"},"gitProvider/organization/repository"),". At the moment the dashboard backend only supports ",(0,a.kt)("inlineCode",{parentName:"li"},"github.com")," as a git provider, but we will also support ",(0,a.kt)("inlineCode",{parentName:"li"},"gitlab.com"),"/",(0,a.kt)("inlineCode",{parentName:"li"},"bitbucket.org"),", etc. in the future. It can have an indefinite number of levels. Slashes (",(0,a.kt)("inlineCode",{parentName:"li"},"/"),") in this name are ",(0,a.kt)("em",{parentName:"li"},"not")," escaped. For example ",(0,a.kt)("inlineCode",{parentName:"li"},"github.com/stryker-mutator/stryker-net"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VERSION"),': the version of the report. This should be filled with the branch name, git tag or git sha (although no validation is done). You can override a report of a specific version, like docker tags. Slashes in the version should not be encoded. For example, it\'s valid to use "feat/logging".'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"API_KEY"),": The API key that you retrieved by enabling the report on the dashboard.stryker-mutator.io website."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"mutation-testing-report.json")," file: A valid report according to the ",(0,a.kt)("a",n({parentName:"li"},{href:"https://github.com/stryker-mutator/mutation-testing-elements/tree/master/packages/report-schema"}),"mutation testing report schema"),", or a mutation score only report in the form of ",(0,a.kt)("inlineCode",{parentName:"li"},'{ "mutationScore": 42 }')," (this way, you will have a mutation score badge, but no other information is stored)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MODULE"),": Optional. If you want to store multiple reports for a version, you can use this value to separate them logically, for example, in a mono-repo setup where each package (or project or module) delivers a report.")),(0,a.kt)("div",n({},{className:"footnotes"}),(0,a.kt)("hr",{parentName:"div"}),(0,a.kt)("ol",{parentName:"div"},(0,a.kt)("li",n({parentName:"ol"},{id:"fn-1"}),"The ",(0,a.kt)("inlineCode",{parentName:"li"},"project")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"version")," are automatically retrieved if your project is using ",(0,a.kt)("a",n({parentName:"li"},{href:"https://github.com/dotnet/sourcelink"}),"SourceLink"),".",(0,a.kt)("a",n({parentName:"li"},{href:"#fnref-1",className:"footnote-backref"}),"\u21a9")))))}u.isMDXComponent=!0}}]);